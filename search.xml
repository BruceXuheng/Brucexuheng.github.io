<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Android Rust NDK</title>
      <link href="/2023/10/08/Android-Rust-NDK/"/>
      <url>/2023/10/08/Android-Rust-NDK/</url>
      
        <content type="html"><![CDATA[<p>一、集成Rust&amp;NDK开发 </p><ol><li><p>创建 moudle [:encrypt] 将完成Rust&amp;NDK</p></li><li><p>当前项目 build.gradle.kts  中引入插件</p><blockquote><p><a href="https://github.com/mozilla/rust-android-gradle#rust-android-gradle-plugin">Rust Android Gradle Plugin</a></p></blockquote><ol><li>id(“org.mozilla.rust-android-gradle.rust-android”) version “0.9.3” apply false</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span><br><span class="line">plugins &#123;</span><br><span class="line">    id(&quot;com.android.application&quot;) version &quot;8.1.0&quot; apply false</span><br><span class="line">    id(&quot;org.jetbrains.kotlin.android&quot;) version &quot;1.8.10&quot; apply false</span><br><span class="line">    id(&quot;com.android.library&quot;) version &quot;8.1.0&quot; apply false</span><br><span class="line">    id(&quot;org.mozilla.rust-android-gradle.rust-android&quot;) version &quot;0.9.3&quot; apply false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 [:encrypt] 中构建rust结构</p><ol><li><p>在当前moudle下执行命令 <code>cargo new rust</code></p><p>目录结构如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">encrypt</span><br><span class="line"> -libs</span><br><span class="line"> -rust</span><br><span class="line"> --src</span><br><span class="line"> --.gitignore</span><br><span class="line"> --Cargo.lock</span><br><span class="line"> --Cargo.toml</span><br><span class="line"> -src</span><br><span class="line"> -.gitignore</span><br><span class="line"> -build.gradle.kts</span><br><span class="line"> -consumer-rules.pro</span><br><span class="line"> -proguard-rules.pro</span><br></pre></td></tr></table></figure></li><li><p>配置Cargo.toml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[package]</span><br><span class="line">name = &quot;brencrypt&quot;</span><br><span class="line">version = &quot;0.1.0&quot;</span><br><span class="line">edition = &quot;2021&quot;</span><br><span class="line"></span><br><span class="line"># See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html</span><br><span class="line"></span><br><span class="line">[dependencies]</span><br><span class="line">jni = &quot;0.18.0&quot;</span><br><span class="line">   </span><br><span class="line">[lib]</span><br><span class="line">crate_type = [&quot;staticlib&quot;, &quot;cdylib&quot;]</span><br></pre></td></tr></table></figure></li></ol></li><li><p>在 [:encrypt] 中集成 mozilla.rust-android-gradle.</p><blockquote><p>具体说明查看 <a href="https://github.com/mozilla/rust-android-gradle#rust-android-gradle-plugin">Rust Android Gradle Plugin</a></p></blockquote><ol><li>id(“org.mozilla.rust-android-gradle.rust-android”) version “0.9.3”</li></ol>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id(&quot;com.android.library&quot;)</span><br><span class="line">    id(&quot;org.jetbrains.kotlin.android&quot;)</span><br><span class="line">    id(&quot;org.mozilla.rust-android-gradle.rust-android&quot;) version &quot;0.9.3&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>CargoExtension配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">extensions.configure(com.nishtahir.CargoExtension::class) &#123;</span><br><span class="line">    module = &quot;./rust&quot;  // Or whatever directory contains your Cargo.toml</span><br><span class="line">    libname = &quot;brencrypt&quot; // Or whatever matches Cargo.toml&#x27;s [package] name.</span><br><span class="line">    targets = listOf(&quot;arm&quot;,&quot;x86&quot;,&quot;arm64&quot;) // See bellow for a longer list of options</span><br><span class="line">    profile = &quot;release&quot; // The Cargo release profile to build.</span><br><span class="line">    prebuiltToolchains = true</span><br><span class="line">    // targetIncludes = [&#x27;libnotlibname.so&#x27;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><p>在项目下执行 <code>gradlew.bat cargobuild</code></p></li><li><p>so文件转移</p></li></ol><blockquote><p>目前 Mozilla 插件还不支持AGP8.0 有不少问题， 没办法自动迁移so</p></blockquote><p>​手动转移到  [:encrypt] 中jniLibs中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">main</span><br><span class="line">java</span><br><span class="line"> -jniLibs</span><br><span class="line"> --arm64-v8a</span><br><span class="line">  ---libbrencrypt.so</span><br><span class="line"> --armeabi-v7a</span><br><span class="line">  ---libbrencrypt.so</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Rust </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国密汇总</title>
      <link href="/2023/09/05/%E5%9B%BD%E5%AF%86%E6%B1%87%E6%80%BB/"/>
      <url>/2023/09/05/%E5%9B%BD%E5%AF%86%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h1 id="国产密码算法包括SM1、SM2、SM3、SM4和SM7。"><a href="#国产密码算法包括SM1、SM2、SM3、SM4和SM7。" class="headerlink" title="国产密码算法包括SM1、SM2、SM3、SM4和SM7。"></a>国产密码算法包括SM1、SM2、SM3、SM4和SM7。</h1><h2 id="SM1-对称算法"><a href="#SM1-对称算法" class="headerlink" title="SM1 - 对称算法"></a>SM1 - 对称算法</h2><ul><li>分组长度和密钥长度均为128位.</li><li>该算法目前尚未公开.</li><li>该算法的安全性和软硬件实现性能与AES算法相当.</li><li>调用加密芯片的接口进行使用.</li></ul><h2 id="SM2-非对称密钥算法"><a href="#SM2-非对称密钥算法" class="headerlink" title="SM2 - 非对称密钥算法"></a>SM2 - 非对称密钥算法</h2><ul><li>加密强度为256位</li><li>该算法是一种基于椭圆曲线（ECC）</li></ul><h2 id="SM3-消息摘要"><a href="#SM3-消息摘要" class="headerlink" title="SM3 - 消息摘要"></a>SM3 - 消息摘要</h2><blockquote><p><a href="https://www.oscca.gov.cn/sca/xxgk/2010-12/17/content_1002389.shtml">https://www.oscca.gov.cn/sca/xxgk/2010-12/17/content_1002389.shtml</a></p></blockquote><ul><li>密码杂凑算法消息分组长度 为 512b, 摘要长度 256b</li><li>该算法为不可逆的算法， 具体算法是保密的。</li></ul><p>执行过程 &#x3D; &gt; 消息填充、消息扩展、迭代压缩</p><h2 id="SM4"><a href="#SM4" class="headerlink" title="SM4"></a>SM4</h2><ul><li>一种 Feistel 结构的分组密码算法，其分组长度和密钥长度均为128bit</li></ul><p>该算法为对称加密算法，其加密强度为128位 </p><h2 id="SM7"><a href="#SM7" class="headerlink" title="SM7"></a>SM7</h2><p>该算法是一种分组密码算法，分组长度为128比特，密钥长度也为128比特。</p><p>SM7适用于非接触式IC卡，应用包括身份识别类应用(门禁卡、工作证、参赛证)，票务类应用(大型赛事门票、展会门票)，支付与通卡类应用（积分消费卡、校园一卡通、企业一卡通等</p><h3 id="SM9"><a href="#SM9" class="headerlink" title="SM9"></a>SM9</h3><p>SM9 主要用于用户的身份认证。SM9 算法不需要申请数字证书，适用于互联网应用的各种新兴应用的安全保障。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>思考-写怎样的代码看着舒服(Java/Kotlin)</title>
      <link href="/2023/08/31/%E6%80%9D%E8%80%83-%E5%86%99%E6%80%8E%E6%A0%B7%E7%9A%84%E4%BB%A3%E7%A0%81%E7%9C%8B%E7%9D%80%E8%88%92%E6%9C%8D/"/>
      <url>/2023/08/31/%E6%80%9D%E8%80%83-%E5%86%99%E6%80%8E%E6%A0%B7%E7%9A%84%E4%BB%A3%E7%A0%81%E7%9C%8B%E7%9D%80%E8%88%92%E6%9C%8D/</url>
      
        <content type="html"><![CDATA[<p>看整齐条理的类文件代码 真的会少几条皱纹 </p><p>在想写怎么样的代码会舒服</p><p>深思熟虑问过各家AI后进行整合编码约定</p><p>目前对应代码量比较多的是Java\Kotlin, 算是阅读量和编写量最多的语言, 汇总如下</p><h2 id="Java-Class-Layout"><a href="#Java-Class-Layout" class="headerlink" title="Java Class Layout"></a>Java Class Layout</h2><p>属性变量</p><ol><li>静态&#x2F;常量变量</li><li>私有&#x2F;公共成员变量（非静态变量）<br>构造</li><li>构造方法<br>方法</li><li>单例方法（如果有）</li><li>公共&#x2F;私有方法(非静态)</li><li>静态方法<br>内部类</li><li>静态&#x2F;内部类（如果有）</li></ol><h2 id="Kotlin-Class-Layout"><a href="#Kotlin-Class-Layout" class="headerlink" title="Kotlin Class Layout"></a>Kotlin Class Layout</h2><blockquote><p><a href="https://kotlinlang.org/docs/coding-conventions.html#class-layout">https://kotlinlang.org/docs/coding-conventions.html#class-layout</a></p></blockquote><ol><li><p>Property declarations and initializer blocks<br>属性声明和初始值设定项块</p></li><li><p>Secondary constructors<br>辅助构造函数</p></li><li><p>Method declarations<br>方法声明</p></li><li><p>Companion object<br>伴随对象</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kotlin Exception Handling</title>
      <link href="/2023/08/08/Kotlin-Exception-Handling/"/>
      <url>/2023/08/08/Kotlin-Exception-Handling/</url>
      
        <content type="html"><![CDATA[<h3 id="1-普通处理异常"><a href="#1-普通处理异常" class="headerlink" title="1. 普通处理异常"></a>1. 普通处理异常</h3><blockquote><p>这种是普通的写法，明了的处理异常<br>Kotlin也支持多个catch捕获</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> Throwable(<span class="string">&quot;Diy Exception&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">    print(<span class="string">&quot;Exception-&gt; <span class="subst">$&#123;e.message&#125;</span>&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line">    print(<span class="string">&quot;finally&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-inline模式处理异常"><a href="#2-inline模式处理异常" class="headerlink" title="2. inline模式处理异常"></a>2. inline模式处理异常</h3><blockquote><p>封装处理不会导致程序异常终止, 易于使用, 提供代码质量和开发效率<br>吐槽一点 kotlin 不支持异常检查很不好, 需要人去识别可能出现的各种异常, 在对接各类功能接口很容易被忽略异常</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">fun main() &#123;</span><br><span class="line">    var p = Person()</span><br><span class="line">    p.name = null</span><br><span class="line">    nameCatch(action = &#123;</span><br><span class="line">        val n: String = p.name ?: fail(&quot;name is null&quot;)</span><br><span class="line">    &#125;, exceptionFinally = &#123;</span><br><span class="line">        print(&quot;exceptionFinally&quot;)</span><br><span class="line">    &#125;)</span><br><span class="line">    print(&quot;================&quot;)</span><br><span class="line">    print(5)</span><br><span class="line">    print(&quot;================&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">inline fun nameCatch(action: () -&gt; Unit, exceptionFinally: () -&gt; Unit) &#123;</span><br><span class="line">    try &#123;</span><br><span class="line">        action()</span><br><span class="line">    &#125; catch (e: Exception) &#123;</span><br><span class="line">        print(&quot;inline try catch -&gt; $&#123;e.message&#125;&quot;)</span><br><span class="line">    &#125; finally &#123;</span><br><span class="line">        exceptionFinally()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Kotlin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kotlin </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter 记录</title>
      <link href="/2023/06/25/Flutter-%E8%AE%B0%E5%BD%95/"/>
      <url>/2023/06/25/Flutter-%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>check 环境</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter doctor</span><br></pre></td></tr></table></figure><p>同意 Android 协议</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flutter doctor --android-licenses</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Scrcpy Frp 远程操控/调试Android手机</title>
      <link href="/2023/06/25/Android-Scrcpy-Frp-%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7-%E8%B0%83%E8%AF%95Android%E6%89%8B%E6%9C%BA/"/>
      <url>/2023/06/25/Android-Scrcpy-Frp-%E8%BF%9C%E7%A8%8B%E6%93%8D%E6%8E%A7-%E8%B0%83%E8%AF%95Android%E6%89%8B%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">1. 安装msys2</span><br><span class="line">https://www.msys2.org/</span><br><span class="line"></span><br><span class="line">2. 安装环境</span><br><span class="line">参考文档</span><br><span class="line">https://blog.csdn.net/u012787710/article/details/130430216</span><br><span class="line"></span><br><span class="line">pacman -S mingw-w64-x86_64-SDL2</span><br><span class="line">pacman -S mingw-w64-x86_64-ffmpeg</span><br><span class="line">pacman -S mingw-w64-x86_64-libusb</span><br><span class="line">pacman -S mingw-w64-x86_64-make</span><br><span class="line">pacman -S mingw-w64-x86_64-pkg-config</span><br><span class="line">pacman -S mingw-w64-x86_64-meson</span><br><span class="line"></span><br><span class="line">3.</span><br><span class="line">pwd</span><br><span class="line">git clone https://github.com/Genymobile/scrcpy.git</span><br><span class="line"></span><br><span class="line">4.</span><br><span class="line"># 进入代码仓</span><br><span class="line">cd./ scrcpy/</span><br><span class="line"></span><br><span class="line"># 编译scrcpy-server 如果慢 跳过 下载编译好的 https://github.com/Genymobile/scrcpy/releases/tag/v2.0</span><br><span class="line">./server/scripts/build-wrapper.sh &quot;server&quot; &quot;server/scrcpy-server&quot; &quot;release&quot;</span><br><span class="line"></span><br><span class="line"># 我放入了 scrcpy-server</span><br><span class="line">scrcpy\server\scrcpy-server</span><br><span class="line"></span><br><span class="line"># 编译Scrcpy.exe</span><br><span class="line">meson x --buildtype release --strip -Db_lto=true -Dprebuilt_server=./server/scrcpy-server-v2.0</span><br><span class="line"></span><br><span class="line">ninja.exe -Cx</span><br><span class="line"></span><br><span class="line">./run x</span><br><span class="line">---&gt;ERROR: Command not found: [adb], [start-server]</span><br><span class="line">---&gt;解: 放入代码仓根目录 adb.exe AdbWinApi.dll AdbWinUsbApi.dll</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/25/hello-world/"/>
      <url>/2023/06/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
